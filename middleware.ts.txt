// import { decrypt } from "@/lib/session";
// import { NextRequest, NextResponse } from "next/server";

// // Define routes that don't require authentication
// const publicRoutes = ["/login", "/signup", "/"];

// export async function middleware(req: NextRequest) {
//   const { pathname } = req.nextUrl;
//   const isPublicRoute = publicRoutes.includes(pathname);

//   // Check if session cookie has valid user Id else redirect to /login
//   const sessionToken = req.cookies.get("session")?.value;
//   const session = await decrypt(sessionToken);
//   const isAuth = session?.userId;

  
//   if (isPublicRoute && isAuth) return NextResponse.redirect("/");

//   if (!isPublicRoute && !isAuth) {
//     return NextResponse.redirect(new URL("/login", req.url));
//   }

//   // User is authenticated, allow the request
//   return NextResponse.next();
// }

// // Apply middleware to all routes except API, static, and image files
// export const config = {
//   matcher: ["/((?!api|_next/static|_next/image|.*\\.png$).*)"],
// };
